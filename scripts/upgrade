#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_docker_image_extract
source /usr/share/yunohost/helpers

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..."

ynh_systemd_action --service_name=$app --action="stop" --log_path="systemd" --line_match="Vaultwarden process exited"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Upgrading source files..."

_download_vaultwarden_from_docker

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..."

ynh_add_config --template="vaultwarden.env" --destination="$install_dir/live/.env"

chmod 400 "$install_dir/live/.env"
chown $app:$app "$install_dir/live/.env"

# Fix SMTP configuration
config_file=$data_dir/config.json
if [ -e "$config_file" ]; then
	cat <<< $(jq -r --arg domain "$domain" '.smtp_host = $domain' $config_file) > $config_file
	cat <<< $(jq -r '.smtp_security = "starttls"' $config_file) > $config_file
	if [ ! -s "$config_file" ]; then
		ynh_die --message="Something went wrong while setting up $config_file: it ended up empty."
	fi
fi

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression --message="Upgrading system configurations related to $app..." --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

# Create a dedicated systemd config
ynh_add_systemd_config

# Create log file for fail2ban
mkdir -p "/var/log/$app"
touch "/var/log/$app/$app.log"
chown -R $app:$app "/var/log/$app"

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate --non-append

# Create a dedicated Fail2Ban config
ynh_add_fail2ban_config --logpath="/var/log/$app/$app.log" --failregex="^.*Username or password is incorrect\. Try again\. IP: <ADDR>\. Username:.*$|^.*Invalid admin token\. IP: <ADDR>.*$"

yunohost service add $app --description="$app daemon for Vaultwarden" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

ynh_systemd_action --service_name=$app --action="start" --log_path="systemd" --line_match="Rocket has launched from" --length=100

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed"
