#!/bin/bash

source _common.sh
source ynh_docker_image_extract
source /usr/share/yunohost/helpers

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop" --log_path="systemd" --wait_until="Stopping Vaultwarden Server"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# FIXME: this is still supported but the recommendation is now to *always* re-setup the app sources wether or not the upstream sources changed
if ynh_app_upstream_version_changed
then
	ynh_script_progression "Upgrading source files..."

	_download_vaultwarden_from_docker
fi

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating configuration..."

ynh_config_add --template="vaultwarden.env" --destination="$install_dir/live/.env"

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 400 "$install_dir/live/.env"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app:$app "$install_dir/live/.env"

# Fix SMTP configuration
config_file=$data_dir/config.json
if [ -e "$config_file" ]; then
	cat <<< $(jq -r --arg domain "$domain" '.smtp_host = $domain' $config_file) > $config_file
	cat <<< $(jq -r '.smtp_security = "starttls"' $config_file) > $config_file
	if [ ! -s "$config_file" ]; then
		ynh_die "Something went wrong while setting up $config_file: it ended up empty."
	fi
fi

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression "Upgrading system configurations related to $app..."

# Create a dedicated NGINX config
ynh_config_add_nginx

# Create a dedicated systemd config
ynh_config_add_systemd

# Create log file for fail2ban
mkdir -p "/var/log/$app"
touch "/var/log/$app/$app.log"
#REMOVEME? Assuming ynh_config_add_logrotate is called, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:$app "/var/log/$app"

# Use logrotate to manage app-specific logfile(s)
ynh_config_add_logrotate

# Create a dedicated Fail2Ban config
ynh_config_add_fail2ban --logpath="/var/log/$app/$app.log" --failregex="^.*Username or password is incorrect\. Try again\. IP: <ADDR>\. Username:.*$"

yunohost service add $app --description="$app daemon for vaultwarden" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

ynh_systemctl --service=$app --action="start" --log_path="systemd" --wait_until="Rocket has launched from" --length=100

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
